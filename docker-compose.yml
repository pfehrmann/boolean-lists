version: '3'

volumes:
  postgres_data:
      driver: local
  mongodb_data:
      driver: local

services:
  # stores data for keycloak
  postgres:
      image: postgres
      volumes:
        - postgres_data:/var/lib/postgresql/data
      environment:
        POSTGRES_DB: keycloak
        POSTGRES_USER: keycloak
        POSTGRES_PASSWORD: ${MYSQL_PASSWORD}
  keycloak:
      build:
        dockerfile: keycloak.dockerfile
        context: .
      environment:
        DB_VENDOR: POSTGRES
        DB_ADDR: postgres
        DB_DATABASE: keycloak
        DB_USER: keycloak
        DB_PASSWORD: ${MYSQL_PASSWORD}
        KEYCLOAK_USER: admin
        KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
        PROXY_ADDRESS_FORWARDING: 'true'
      ports:
        - 8080:8080
      depends_on:
        - postgres
    # stores information for the backend
  mongodb:
    image: mongo:latest
    restart: always
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    container_name: "mongodb"
    ports:
      - 27017:27017
  frontend:
    build:
      dockerfile: frontend.Dockerfile
      context: .
    restart: always
    ports:
      - 5000:5000
    environment:
      - PORT=5000
      - PUBLIC_URL
      - REACT_APP_API_BASE
      - REACT_APP_BASE
      - NODE_ENV=production
    depends_on:
      - keycloak
      - api
  api:
    build:
      dockerfile: api.Dockerfile
      context: .
    restart: always
    ports:
      - 3000:3000
    environment:
      - SONG_COUNTS
      - SHUFFLE
      - PORT=3000
      - CLIENT_ID
      - CLIENT_SECRET
      - REDIRECT_URI
      - MONGOOSE_CONNECTION_STRING
      - NODE_ENV=production
    depends_on:
      - keycloak
      - mongodb
